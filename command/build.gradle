plugins {
    id 'maven-publish'
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

repositories {
    google()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

//compileKotlin {
//    kotlinOptions {
//        jvmTarget = "1.8"
//        apiVersion = "1.5"
//    }
//}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "org.apache.commons:commons-math3:3.6.1"
    compileOnly "org.firstinspires.ftc:RobotCore:7.0.0"
    compileOnly 'org.firstinspires.ftc:Hardware:7.0.0'
    api project(":navigation")

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.2"

//    testImplementation "org.knowm.xchart:xchart:3.8.0"
}

android {
    compileSdkVersion 30
    compileOptions {
        sourceCompatibility "1.8"
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
    defaultConfig {
        minSdkVersion 25
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {
    publications {
        release(MavenPublication) {
            artifactId = "command"
            artifact sourcesJar
            artifact("$buildDir/outputs/aar/command-release.aar")
            pom {
                name = "Joos"
                description = "A comprehensive kotlin library designed for FTC."
                url = 'https://github.com/amarcolini/joos'
                developers {
                    developer {
                        id = 'amarcolini'
                        name = 'Alessandro Marcolini'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = 'testRepo'
            url = '../testRepo'
        }
    }
}

publish.dependsOn(build)
